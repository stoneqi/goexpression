// Code generated by "stringer -type=OperatorSymbol"; DO NOT EDIT.

package parserSecond

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OXXX-0]
	_ = x[LITERAL-1]
	_ = x[PLUS-2]
	_ = x[MINUS-3]
	_ = x[EXCLAMATION-4]
	_ = x[EN_NOT-5]
	_ = x[CARET-6]
	_ = x[STAR-7]
	_ = x[AMPERSAND-8]
	_ = x[DIV-9]
	_ = x[MOD-10]
	_ = x[QUESTION-11]
	_ = x[LSHIFT-12]
	_ = x[RSHIFT-13]
	_ = x[BIT_CLEAR-14]
	_ = x[OR-15]
	_ = x[EQUALS-16]
	_ = x[NOT_EQUALS-17]
	_ = x[LESS-18]
	_ = x[LESS_OR_EQUALS-19]
	_ = x[GREATER-20]
	_ = x[GREATER_OR_EQUALS-21]
	_ = x[LOGICAL_AND-22]
	_ = x[LOGICAL_OR-23]
	_ = x[LOGICAL_IN-24]
	_ = x[OCALLFUNC-25]
	_ = x[BOOL-26]
	_ = x[FLOATE64-27]
	_ = x[STRING-28]
	_ = x[SLICE-29]
	_ = x[INDEX-30]
	_ = x[SLICEPARAMS-31]
	_ = x[FUNCCALL-32]
	_ = x[EXPRESSIONLIST-33]
	_ = x[EXPRESSIONCOLON-34]
	_ = x[NIL-35]
}

const _OperatorSymbol_name = "OXXXLITERALPLUSMINUSEXCLAMATIONEN_NOTCARETSTARAMPERSANDDIVMODQUESTIONLSHIFTRSHIFTBIT_CLEAROREQUALSNOT_EQUALSLESSLESS_OR_EQUALSGREATERGREATER_OR_EQUALSLOGICAL_ANDLOGICAL_ORLOGICAL_INOCALLFUNCBOOLFLOATE64STRINGSLICEINDEXSLICEPARAMSFUNCCALLEXPRESSIONLISTEXPRESSIONCOLONNIL"

var _OperatorSymbol_index = [...]uint16{0, 4, 11, 15, 20, 31, 37, 42, 46, 55, 58, 61, 69, 75, 81, 90, 92, 98, 108, 112, 126, 133, 150, 161, 171, 181, 190, 194, 202, 208, 213, 218, 229, 237, 251, 266, 269}

func (i OperatorSymbol) String() string {
	if i >= OperatorSymbol(len(_OperatorSymbol_index)-1) {
		return "OperatorSymbol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperatorSymbol_name[_OperatorSymbol_index[i]:_OperatorSymbol_index[i+1]]
}
