// Code generated by "stringer -type=OperatorSymbol"; DO NOT EDIT.

package parserSecond

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OXXX-0]
	_ = x[VALUE-1]
	_ = x[LITERAL-2]
	_ = x[PLUS-3]
	_ = x[MINUS-4]
	_ = x[EXCLAMATION-5]
	_ = x[EN_NOT-6]
	_ = x[CARET-7]
	_ = x[STAR-8]
	_ = x[AMPERSAND-9]
	_ = x[DIV-10]
	_ = x[MOD-11]
	_ = x[QUESTION-12]
	_ = x[LSHIFT-13]
	_ = x[RSHIFT-14]
	_ = x[BIT_CLEAR-15]
	_ = x[OR-16]
	_ = x[EQUALS-17]
	_ = x[NOT_EQUALS-18]
	_ = x[LESS-19]
	_ = x[LESS_OR_EQUALS-20]
	_ = x[GREATER-21]
	_ = x[GREATER_OR_EQUALS-22]
	_ = x[LOGICAL_AND-23]
	_ = x[LOGICAL_OR-24]
	_ = x[LOGICAL_IN-25]
	_ = x[OCALLFUNC-26]
	_ = x[BOOL-27]
	_ = x[FLOATE64-28]
	_ = x[STRING-29]
	_ = x[SLICE-30]
	_ = x[INDEX-31]
	_ = x[SLICEPARAMS-32]
	_ = x[FUNCCALL-33]
	_ = x[EXPRESSIONLIST-34]
	_ = x[EXPRESSIONCOLON-35]
	_ = x[NIL-36]
}

const _OperatorSymbol_name = "OXXXVALUELITERALPLUSMINUSEXCLAMATIONEN_NOTCARETSTARAMPERSANDDIVMODQUESTIONLSHIFTRSHIFTBIT_CLEAROREQUALSNOT_EQUALSLESSLESS_OR_EQUALSGREATERGREATER_OR_EQUALSLOGICAL_ANDLOGICAL_ORLOGICAL_INOCALLFUNCBOOLFLOATE64STRINGSLICEINDEXSLICEPARAMSFUNCCALLEXPRESSIONLISTEXPRESSIONCOLONNIL"

var _OperatorSymbol_index = [...]uint16{0, 4, 9, 16, 20, 25, 36, 42, 47, 51, 60, 63, 66, 74, 80, 86, 95, 97, 103, 113, 117, 131, 138, 155, 166, 176, 186, 195, 199, 207, 213, 218, 223, 234, 242, 256, 271, 274}

func (i OperatorSymbol) String() string {
	if i >= OperatorSymbol(len(_OperatorSymbol_index)-1) {
		return "OperatorSymbol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperatorSymbol_name[_OperatorSymbol_index[i]:_OperatorSymbol_index[i+1]]
}
