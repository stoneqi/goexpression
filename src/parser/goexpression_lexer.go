// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type goexpressionLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var goexpressionlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func goexpressionlexerLexerInit() {
	staticData := &goexpressionlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "", "'and'", "'in'", "'not'", "'or'", "'('", "')'", "'{'", "'}'",
		"'['", "']'", "'='", "','", "';'", "'?'", "':'", "'.'", "'nil'", "'||'",
		"'&&'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'|'", "'/'",
		"'%'", "'<<'", "'>>'", "'&^'", "'!'", "'+'", "'-'", "'^'", "'*'", "'&'",
	}
	staticData.symbolicNames = []string{
		"", "EN_TRUE", "EN_FALSE", "EN_AND", "EN_IN", "EN_NOT", "EN_OR", "L_PAREN",
		"R_PAREN", "L_CURLY", "R_CURLY", "L_BRACKET", "R_BRACKET", "ASSIGN",
		"COMMA", "SEMI", "QUESTION", "COLON", "DOT", "NIL_LIT", "LOGICAL_OR",
		"LOGICAL_AND", "EQUALS", "NOT_EQUALS", "LESS", "LESS_OR_EQUALS", "GREATER",
		"GREATER_OR_EQUALS", "OR", "DIV", "MOD", "LSHIFT", "RSHIFT", "BIT_CLEAR",
		"EXCLAMATION", "PLUS", "MINUS", "CARET", "STAR", "AMPERSAND", "DECIMAL_LIT",
		"BINARY_LIT", "OCTAL_LIT", "HEX_LIT", "FLOAT_LIT", "DECIMAL_FLOAT_LIT",
		"HEX_FLOAT_LIT", "IDENTIFIER", "RAW_STRING_LIT", "INTERPRETED_STRING_LIT",
		"SINGLE_STRING_LIT", "WS", "COMMENT", "TERMINATOR", "LINE_COMMENT",
		"WS_NLSEMI", "COMMENT_NLSEMI", "LINE_COMMENT_NLSEMI", "EOS",
	}
	staticData.ruleNames = []string{
		"EN_TRUE", "EN_FALSE", "EN_AND", "EN_IN", "EN_NOT", "EN_OR", "L_PAREN",
		"R_PAREN", "L_CURLY", "R_CURLY", "L_BRACKET", "R_BRACKET", "ASSIGN",
		"COMMA", "SEMI", "QUESTION", "COLON", "DOT", "NIL_LIT", "LOGICAL_OR",
		"LOGICAL_AND", "EQUALS", "NOT_EQUALS", "LESS", "LESS_OR_EQUALS", "GREATER",
		"GREATER_OR_EQUALS", "OR", "DIV", "MOD", "LSHIFT", "RSHIFT", "BIT_CLEAR",
		"EXCLAMATION", "PLUS", "MINUS", "CARET", "STAR", "AMPERSAND", "DECIMAL_LIT",
		"BINARY_LIT", "OCTAL_LIT", "HEX_LIT", "FLOAT_LIT", "DECIMAL_FLOAT_LIT",
		"HEX_FLOAT_LIT", "HEX_MANTISSA", "HEX_EXPONENT", "IDENTIFIER", "RAW_STRING_LIT",
		"INTERPRETED_STRING_LIT", "SINGLE_STRING_LIT", "WS", "COMMENT", "TERMINATOR",
		"LINE_COMMENT", "ESCAPED_VALUE", "DECIMALS", "OCTAL_DIGIT", "HEX_DIGIT",
		"BIN_DIGIT", "EXPONENT", "WS_NLSEMI", "COMMENT_NLSEMI", "LINE_COMMENT_NLSEMI",
		"EOS",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 58, 543, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 0, 146, 8, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 3, 1, 163, 8, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1,
		8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21,
		1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1,
		26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30,
		1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39,
		1, 39, 3, 39, 259, 8, 39, 1, 39, 5, 39, 262, 8, 39, 10, 39, 12, 39, 265,
		9, 39, 3, 39, 267, 8, 39, 1, 40, 1, 40, 1, 40, 3, 40, 272, 8, 40, 1, 40,
		4, 40, 275, 8, 40, 11, 40, 12, 40, 276, 1, 41, 1, 41, 1, 41, 3, 41, 282,
		8, 41, 1, 41, 4, 41, 285, 8, 41, 11, 41, 12, 41, 286, 1, 42, 1, 42, 1,
		42, 3, 42, 292, 8, 42, 1, 42, 4, 42, 295, 8, 42, 11, 42, 12, 42, 296, 1,
		43, 1, 43, 3, 43, 301, 8, 43, 1, 44, 1, 44, 1, 44, 3, 44, 306, 8, 44, 1,
		44, 3, 44, 309, 8, 44, 1, 44, 3, 44, 312, 8, 44, 1, 44, 1, 44, 1, 44, 3,
		44, 317, 8, 44, 3, 44, 319, 8, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		46, 3, 46, 327, 8, 46, 1, 46, 4, 46, 330, 8, 46, 11, 46, 12, 46, 331, 1,
		46, 1, 46, 3, 46, 336, 8, 46, 1, 46, 5, 46, 339, 8, 46, 10, 46, 12, 46,
		342, 9, 46, 3, 46, 344, 8, 46, 1, 46, 1, 46, 1, 46, 3, 46, 349, 8, 46,
		1, 46, 5, 46, 352, 8, 46, 10, 46, 12, 46, 355, 9, 46, 3, 46, 357, 8, 46,
		1, 47, 1, 47, 3, 47, 361, 8, 47, 1, 47, 1, 47, 1, 48, 1, 48, 5, 48, 367,
		8, 48, 10, 48, 12, 48, 370, 9, 48, 1, 49, 1, 49, 5, 49, 374, 8, 49, 10,
		49, 12, 49, 377, 9, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 5, 50, 384,
		8, 50, 10, 50, 12, 50, 387, 9, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 5,
		51, 394, 8, 51, 10, 51, 12, 51, 397, 9, 51, 1, 51, 1, 51, 1, 52, 4, 52,
		402, 8, 52, 11, 52, 12, 52, 403, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1,
		53, 5, 53, 412, 8, 53, 10, 53, 12, 53, 415, 9, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 54, 4, 54, 423, 8, 54, 11, 54, 12, 54, 424, 1, 54, 1,
		54, 1, 55, 1, 55, 1, 55, 1, 55, 5, 55, 433, 8, 55, 10, 55, 12, 55, 436,
		9, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1,
		56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56,
		1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 3, 56, 466, 8,
		56, 1, 57, 1, 57, 3, 57, 470, 8, 57, 1, 57, 5, 57, 473, 8, 57, 10, 57,
		12, 57, 476, 9, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1,
		61, 3, 61, 486, 8, 61, 1, 61, 1, 61, 1, 62, 4, 62, 491, 8, 62, 11, 62,
		12, 62, 492, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 63, 5, 63, 501, 8, 63,
		10, 63, 12, 63, 504, 9, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 64, 1,
		64, 1, 64, 1, 64, 5, 64, 515, 8, 64, 10, 64, 12, 64, 518, 9, 64, 1, 64,
		1, 64, 1, 65, 4, 65, 523, 8, 65, 11, 65, 12, 65, 524, 1, 65, 1, 65, 1,
		65, 1, 65, 1, 65, 5, 65, 532, 8, 65, 10, 65, 12, 65, 535, 9, 65, 1, 65,
		1, 65, 1, 65, 3, 65, 540, 8, 65, 1, 65, 1, 65, 3, 413, 502, 533, 0, 66,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 0,
		95, 0, 97, 47, 99, 48, 101, 49, 103, 50, 105, 51, 107, 52, 109, 53, 111,
		54, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 55, 127, 56, 129,
		57, 131, 58, 1, 0, 18, 1, 0, 49, 57, 1, 0, 48, 57, 2, 0, 66, 66, 98, 98,
		2, 0, 79, 79, 111, 111, 2, 0, 88, 88, 120, 120, 2, 0, 80, 80, 112, 112,
		2, 0, 43, 43, 45, 45, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
		90, 95, 95, 97, 122, 1, 0, 96, 96, 2, 0, 34, 34, 92, 92, 2, 0, 9, 9, 32,
		32, 2, 0, 10, 10, 13, 13, 9, 0, 34, 34, 39, 39, 92, 92, 97, 98, 102, 102,
		110, 110, 114, 114, 116, 116, 118, 118, 1, 0, 48, 55, 3, 0, 48, 57, 65,
		70, 97, 102, 1, 0, 48, 49, 2, 0, 69, 69, 101, 101, 587, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79,
		1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0,
		87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0,
		0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0,
		0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 125,
		1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0,
		1, 145, 1, 0, 0, 0, 3, 162, 1, 0, 0, 0, 5, 164, 1, 0, 0, 0, 7, 168, 1,
		0, 0, 0, 9, 171, 1, 0, 0, 0, 11, 175, 1, 0, 0, 0, 13, 178, 1, 0, 0, 0,
		15, 180, 1, 0, 0, 0, 17, 182, 1, 0, 0, 0, 19, 184, 1, 0, 0, 0, 21, 186,
		1, 0, 0, 0, 23, 188, 1, 0, 0, 0, 25, 190, 1, 0, 0, 0, 27, 192, 1, 0, 0,
		0, 29, 194, 1, 0, 0, 0, 31, 196, 1, 0, 0, 0, 33, 198, 1, 0, 0, 0, 35, 200,
		1, 0, 0, 0, 37, 202, 1, 0, 0, 0, 39, 206, 1, 0, 0, 0, 41, 209, 1, 0, 0,
		0, 43, 212, 1, 0, 0, 0, 45, 215, 1, 0, 0, 0, 47, 218, 1, 0, 0, 0, 49, 220,
		1, 0, 0, 0, 51, 223, 1, 0, 0, 0, 53, 225, 1, 0, 0, 0, 55, 228, 1, 0, 0,
		0, 57, 230, 1, 0, 0, 0, 59, 232, 1, 0, 0, 0, 61, 234, 1, 0, 0, 0, 63, 237,
		1, 0, 0, 0, 65, 240, 1, 0, 0, 0, 67, 243, 1, 0, 0, 0, 69, 245, 1, 0, 0,
		0, 71, 247, 1, 0, 0, 0, 73, 249, 1, 0, 0, 0, 75, 251, 1, 0, 0, 0, 77, 253,
		1, 0, 0, 0, 79, 266, 1, 0, 0, 0, 81, 268, 1, 0, 0, 0, 83, 278, 1, 0, 0,
		0, 85, 288, 1, 0, 0, 0, 87, 300, 1, 0, 0, 0, 89, 318, 1, 0, 0, 0, 91, 320,
		1, 0, 0, 0, 93, 356, 1, 0, 0, 0, 95, 358, 1, 0, 0, 0, 97, 364, 1, 0, 0,
		0, 99, 371, 1, 0, 0, 0, 101, 380, 1, 0, 0, 0, 103, 390, 1, 0, 0, 0, 105,
		401, 1, 0, 0, 0, 107, 407, 1, 0, 0, 0, 109, 422, 1, 0, 0, 0, 111, 428,
		1, 0, 0, 0, 113, 439, 1, 0, 0, 0, 115, 467, 1, 0, 0, 0, 117, 477, 1, 0,
		0, 0, 119, 479, 1, 0, 0, 0, 121, 481, 1, 0, 0, 0, 123, 483, 1, 0, 0, 0,
		125, 490, 1, 0, 0, 0, 127, 496, 1, 0, 0, 0, 129, 510, 1, 0, 0, 0, 131,
		539, 1, 0, 0, 0, 133, 134, 5, 84, 0, 0, 134, 135, 5, 114, 0, 0, 135, 136,
		5, 117, 0, 0, 136, 146, 5, 101, 0, 0, 137, 138, 5, 116, 0, 0, 138, 139,
		5, 114, 0, 0, 139, 140, 5, 117, 0, 0, 140, 146, 5, 101, 0, 0, 141, 142,
		5, 84, 0, 0, 142, 143, 5, 82, 0, 0, 143, 144, 5, 85, 0, 0, 144, 146, 5,
		69, 0, 0, 145, 133, 1, 0, 0, 0, 145, 137, 1, 0, 0, 0, 145, 141, 1, 0, 0,
		0, 146, 2, 1, 0, 0, 0, 147, 148, 5, 70, 0, 0, 148, 149, 5, 97, 0, 0, 149,
		150, 5, 108, 0, 0, 150, 151, 5, 115, 0, 0, 151, 163, 5, 101, 0, 0, 152,
		153, 5, 102, 0, 0, 153, 154, 5, 97, 0, 0, 154, 155, 5, 108, 0, 0, 155,
		156, 5, 115, 0, 0, 156, 163, 5, 101, 0, 0, 157, 158, 5, 70, 0, 0, 158,
		159, 5, 65, 0, 0, 159, 160, 5, 76, 0, 0, 160, 161, 5, 83, 0, 0, 161, 163,
		5, 69, 0, 0, 162, 147, 1, 0, 0, 0, 162, 152, 1, 0, 0, 0, 162, 157, 1, 0,
		0, 0, 163, 4, 1, 0, 0, 0, 164, 165, 5, 97, 0, 0, 165, 166, 5, 110, 0, 0,
		166, 167, 5, 100, 0, 0, 167, 6, 1, 0, 0, 0, 168, 169, 5, 105, 0, 0, 169,
		170, 5, 110, 0, 0, 170, 8, 1, 0, 0, 0, 171, 172, 5, 110, 0, 0, 172, 173,
		5, 111, 0, 0, 173, 174, 5, 116, 0, 0, 174, 10, 1, 0, 0, 0, 175, 176, 5,
		111, 0, 0, 176, 177, 5, 114, 0, 0, 177, 12, 1, 0, 0, 0, 178, 179, 5, 40,
		0, 0, 179, 14, 1, 0, 0, 0, 180, 181, 5, 41, 0, 0, 181, 16, 1, 0, 0, 0,
		182, 183, 5, 123, 0, 0, 183, 18, 1, 0, 0, 0, 184, 185, 5, 125, 0, 0, 185,
		20, 1, 0, 0, 0, 186, 187, 5, 91, 0, 0, 187, 22, 1, 0, 0, 0, 188, 189, 5,
		93, 0, 0, 189, 24, 1, 0, 0, 0, 190, 191, 5, 61, 0, 0, 191, 26, 1, 0, 0,
		0, 192, 193, 5, 44, 0, 0, 193, 28, 1, 0, 0, 0, 194, 195, 5, 59, 0, 0, 195,
		30, 1, 0, 0, 0, 196, 197, 5, 63, 0, 0, 197, 32, 1, 0, 0, 0, 198, 199, 5,
		58, 0, 0, 199, 34, 1, 0, 0, 0, 200, 201, 5, 46, 0, 0, 201, 36, 1, 0, 0,
		0, 202, 203, 5, 110, 0, 0, 203, 204, 5, 105, 0, 0, 204, 205, 5, 108, 0,
		0, 205, 38, 1, 0, 0, 0, 206, 207, 5, 124, 0, 0, 207, 208, 5, 124, 0, 0,
		208, 40, 1, 0, 0, 0, 209, 210, 5, 38, 0, 0, 210, 211, 5, 38, 0, 0, 211,
		42, 1, 0, 0, 0, 212, 213, 5, 61, 0, 0, 213, 214, 5, 61, 0, 0, 214, 44,
		1, 0, 0, 0, 215, 216, 5, 33, 0, 0, 216, 217, 5, 61, 0, 0, 217, 46, 1, 0,
		0, 0, 218, 219, 5, 60, 0, 0, 219, 48, 1, 0, 0, 0, 220, 221, 5, 60, 0, 0,
		221, 222, 5, 61, 0, 0, 222, 50, 1, 0, 0, 0, 223, 224, 5, 62, 0, 0, 224,
		52, 1, 0, 0, 0, 225, 226, 5, 62, 0, 0, 226, 227, 5, 61, 0, 0, 227, 54,
		1, 0, 0, 0, 228, 229, 5, 124, 0, 0, 229, 56, 1, 0, 0, 0, 230, 231, 5, 47,
		0, 0, 231, 58, 1, 0, 0, 0, 232, 233, 5, 37, 0, 0, 233, 60, 1, 0, 0, 0,
		234, 235, 5, 60, 0, 0, 235, 236, 5, 60, 0, 0, 236, 62, 1, 0, 0, 0, 237,
		238, 5, 62, 0, 0, 238, 239, 5, 62, 0, 0, 239, 64, 1, 0, 0, 0, 240, 241,
		5, 38, 0, 0, 241, 242, 5, 94, 0, 0, 242, 66, 1, 0, 0, 0, 243, 244, 5, 33,
		0, 0, 244, 68, 1, 0, 0, 0, 245, 246, 5, 43, 0, 0, 246, 70, 1, 0, 0, 0,
		247, 248, 5, 45, 0, 0, 248, 72, 1, 0, 0, 0, 249, 250, 5, 94, 0, 0, 250,
		74, 1, 0, 0, 0, 251, 252, 5, 42, 0, 0, 252, 76, 1, 0, 0, 0, 253, 254, 5,
		38, 0, 0, 254, 78, 1, 0, 0, 0, 255, 267, 5, 48, 0, 0, 256, 263, 7, 0, 0,
		0, 257, 259, 5, 95, 0, 0, 258, 257, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259,
		260, 1, 0, 0, 0, 260, 262, 7, 1, 0, 0, 261, 258, 1, 0, 0, 0, 262, 265,
		1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 267, 1, 0,
		0, 0, 265, 263, 1, 0, 0, 0, 266, 255, 1, 0, 0, 0, 266, 256, 1, 0, 0, 0,
		267, 80, 1, 0, 0, 0, 268, 269, 5, 48, 0, 0, 269, 274, 7, 2, 0, 0, 270,
		272, 5, 95, 0, 0, 271, 270, 1, 0, 0, 0, 271, 272, 1, 0, 0, 0, 272, 273,
		1, 0, 0, 0, 273, 275, 3, 121, 60, 0, 274, 271, 1, 0, 0, 0, 275, 276, 1,
		0, 0, 0, 276, 274, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 82, 1, 0, 0,
		0, 278, 279, 5, 48, 0, 0, 279, 284, 7, 3, 0, 0, 280, 282, 5, 95, 0, 0,
		281, 280, 1, 0, 0, 0, 281, 282, 1, 0, 0, 0, 282, 283, 1, 0, 0, 0, 283,
		285, 3, 117, 58, 0, 284, 281, 1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 286, 284,
		1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 84, 1, 0, 0, 0, 288, 289, 5, 48,
		0, 0, 289, 294, 7, 4, 0, 0, 290, 292, 5, 95, 0, 0, 291, 290, 1, 0, 0, 0,
		291, 292, 1, 0, 0, 0, 292, 293, 1, 0, 0, 0, 293, 295, 3, 119, 59, 0, 294,
		291, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 296, 297,
		1, 0, 0, 0, 297, 86, 1, 0, 0, 0, 298, 301, 3, 89, 44, 0, 299, 301, 3, 91,
		45, 0, 300, 298, 1, 0, 0, 0, 300, 299, 1, 0, 0, 0, 301, 88, 1, 0, 0, 0,
		302, 311, 3, 115, 57, 0, 303, 305, 5, 46, 0, 0, 304, 306, 3, 115, 57, 0,
		305, 304, 1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306, 308, 1, 0, 0, 0, 307,
		309, 3, 123, 61, 0, 308, 307, 1, 0, 0, 0, 308, 309, 1, 0, 0, 0, 309, 312,
		1, 0, 0, 0, 310, 312, 3, 123, 61, 0, 311, 303, 1, 0, 0, 0, 311, 310, 1,
		0, 0, 0, 312, 319, 1, 0, 0, 0, 313, 314, 5, 46, 0, 0, 314, 316, 3, 115,
		57, 0, 315, 317, 3, 123, 61, 0, 316, 315, 1, 0, 0, 0, 316, 317, 1, 0, 0,
		0, 317, 319, 1, 0, 0, 0, 318, 302, 1, 0, 0, 0, 318, 313, 1, 0, 0, 0, 319,
		90, 1, 0, 0, 0, 320, 321, 5, 48, 0, 0, 321, 322, 7, 4, 0, 0, 322, 323,
		3, 93, 46, 0, 323, 324, 3, 95, 47, 0, 324, 92, 1, 0, 0, 0, 325, 327, 5,
		95, 0, 0, 326, 325, 1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327, 328, 1, 0, 0,
		0, 328, 330, 3, 119, 59, 0, 329, 326, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0,
		331, 329, 1, 0, 0, 0, 331, 332, 1, 0, 0, 0, 332, 343, 1, 0, 0, 0, 333,
		340, 5, 46, 0, 0, 334, 336, 5, 95, 0, 0, 335, 334, 1, 0, 0, 0, 335, 336,
		1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 339, 3, 119, 59, 0, 338, 335, 1,
		0, 0, 0, 339, 342, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 340, 341, 1, 0, 0,
		0, 341, 344, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 343, 333, 1, 0, 0, 0, 343,
		344, 1, 0, 0, 0, 344, 357, 1, 0, 0, 0, 345, 346, 5, 46, 0, 0, 346, 353,
		3, 119, 59, 0, 347, 349, 5, 95, 0, 0, 348, 347, 1, 0, 0, 0, 348, 349, 1,
		0, 0, 0, 349, 350, 1, 0, 0, 0, 350, 352, 3, 119, 59, 0, 351, 348, 1, 0,
		0, 0, 352, 355, 1, 0, 0, 0, 353, 351, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0,
		354, 357, 1, 0, 0, 0, 355, 353, 1, 0, 0, 0, 356, 329, 1, 0, 0, 0, 356,
		345, 1, 0, 0, 0, 357, 94, 1, 0, 0, 0, 358, 360, 7, 5, 0, 0, 359, 361, 7,
		6, 0, 0, 360, 359, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 362, 1, 0, 0,
		0, 362, 363, 3, 115, 57, 0, 363, 96, 1, 0, 0, 0, 364, 368, 7, 7, 0, 0,
		365, 367, 7, 8, 0, 0, 366, 365, 1, 0, 0, 0, 367, 370, 1, 0, 0, 0, 368,
		366, 1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 369, 98, 1, 0, 0, 0, 370, 368, 1,
		0, 0, 0, 371, 375, 5, 96, 0, 0, 372, 374, 8, 9, 0, 0, 373, 372, 1, 0, 0,
		0, 374, 377, 1, 0, 0, 0, 375, 373, 1, 0, 0, 0, 375, 376, 1, 0, 0, 0, 376,
		378, 1, 0, 0, 0, 377, 375, 1, 0, 0, 0, 378, 379, 5, 96, 0, 0, 379, 100,
		1, 0, 0, 0, 380, 385, 5, 34, 0, 0, 381, 384, 8, 10, 0, 0, 382, 384, 3,
		113, 56, 0, 383, 381, 1, 0, 0, 0, 383, 382, 1, 0, 0, 0, 384, 387, 1, 0,
		0, 0, 385, 383, 1, 0, 0, 0, 385, 386, 1, 0, 0, 0, 386, 388, 1, 0, 0, 0,
		387, 385, 1, 0, 0, 0, 388, 389, 5, 34, 0, 0, 389, 102, 1, 0, 0, 0, 390,
		395, 5, 39, 0, 0, 391, 394, 8, 10, 0, 0, 392, 394, 3, 113, 56, 0, 393,
		391, 1, 0, 0, 0, 393, 392, 1, 0, 0, 0, 394, 397, 1, 0, 0, 0, 395, 393,
		1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 398, 1, 0, 0, 0, 397, 395, 1, 0,
		0, 0, 398, 399, 5, 39, 0, 0, 399, 104, 1, 0, 0, 0, 400, 402, 7, 11, 0,
		0, 401, 400, 1, 0, 0, 0, 402, 403, 1, 0, 0, 0, 403, 401, 1, 0, 0, 0, 403,
		404, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405, 406, 6, 52, 0, 0, 406, 106,
		1, 0, 0, 0, 407, 408, 5, 47, 0, 0, 408, 409, 5, 42, 0, 0, 409, 413, 1,
		0, 0, 0, 410, 412, 9, 0, 0, 0, 411, 410, 1, 0, 0, 0, 412, 415, 1, 0, 0,
		0, 413, 414, 1, 0, 0, 0, 413, 411, 1, 0, 0, 0, 414, 416, 1, 0, 0, 0, 415,
		413, 1, 0, 0, 0, 416, 417, 5, 42, 0, 0, 417, 418, 5, 47, 0, 0, 418, 419,
		1, 0, 0, 0, 419, 420, 6, 53, 0, 0, 420, 108, 1, 0, 0, 0, 421, 423, 7, 12,
		0, 0, 422, 421, 1, 0, 0, 0, 423, 424, 1, 0, 0, 0, 424, 422, 1, 0, 0, 0,
		424, 425, 1, 0, 0, 0, 425, 426, 1, 0, 0, 0, 426, 427, 6, 54, 0, 0, 427,
		110, 1, 0, 0, 0, 428, 429, 5, 47, 0, 0, 429, 430, 5, 47, 0, 0, 430, 434,
		1, 0, 0, 0, 431, 433, 8, 12, 0, 0, 432, 431, 1, 0, 0, 0, 433, 436, 1, 0,
		0, 0, 434, 432, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 435, 437, 1, 0, 0, 0,
		436, 434, 1, 0, 0, 0, 437, 438, 6, 55, 0, 0, 438, 112, 1, 0, 0, 0, 439,
		465, 5, 92, 0, 0, 440, 441, 5, 117, 0, 0, 441, 442, 3, 119, 59, 0, 442,
		443, 3, 119, 59, 0, 443, 444, 3, 119, 59, 0, 444, 445, 3, 119, 59, 0, 445,
		466, 1, 0, 0, 0, 446, 447, 5, 85, 0, 0, 447, 448, 3, 119, 59, 0, 448, 449,
		3, 119, 59, 0, 449, 450, 3, 119, 59, 0, 450, 451, 3, 119, 59, 0, 451, 452,
		3, 119, 59, 0, 452, 453, 3, 119, 59, 0, 453, 454, 3, 119, 59, 0, 454, 455,
		3, 119, 59, 0, 455, 466, 1, 0, 0, 0, 456, 466, 7, 13, 0, 0, 457, 458, 3,
		117, 58, 0, 458, 459, 3, 117, 58, 0, 459, 460, 3, 117, 58, 0, 460, 466,
		1, 0, 0, 0, 461, 462, 5, 120, 0, 0, 462, 463, 3, 119, 59, 0, 463, 464,
		3, 119, 59, 0, 464, 466, 1, 0, 0, 0, 465, 440, 1, 0, 0, 0, 465, 446, 1,
		0, 0, 0, 465, 456, 1, 0, 0, 0, 465, 457, 1, 0, 0, 0, 465, 461, 1, 0, 0,
		0, 466, 114, 1, 0, 0, 0, 467, 474, 7, 1, 0, 0, 468, 470, 5, 95, 0, 0, 469,
		468, 1, 0, 0, 0, 469, 470, 1, 0, 0, 0, 470, 471, 1, 0, 0, 0, 471, 473,
		7, 1, 0, 0, 472, 469, 1, 0, 0, 0, 473, 476, 1, 0, 0, 0, 474, 472, 1, 0,
		0, 0, 474, 475, 1, 0, 0, 0, 475, 116, 1, 0, 0, 0, 476, 474, 1, 0, 0, 0,
		477, 478, 7, 14, 0, 0, 478, 118, 1, 0, 0, 0, 479, 480, 7, 15, 0, 0, 480,
		120, 1, 0, 0, 0, 481, 482, 7, 16, 0, 0, 482, 122, 1, 0, 0, 0, 483, 485,
		7, 17, 0, 0, 484, 486, 7, 6, 0, 0, 485, 484, 1, 0, 0, 0, 485, 486, 1, 0,
		0, 0, 486, 487, 1, 0, 0, 0, 487, 488, 3, 115, 57, 0, 488, 124, 1, 0, 0,
		0, 489, 491, 7, 11, 0, 0, 490, 489, 1, 0, 0, 0, 491, 492, 1, 0, 0, 0, 492,
		490, 1, 0, 0, 0, 492, 493, 1, 0, 0, 0, 493, 494, 1, 0, 0, 0, 494, 495,
		6, 62, 0, 0, 495, 126, 1, 0, 0, 0, 496, 497, 5, 47, 0, 0, 497, 498, 5,
		42, 0, 0, 498, 502, 1, 0, 0, 0, 499, 501, 8, 12, 0, 0, 500, 499, 1, 0,
		0, 0, 501, 504, 1, 0, 0, 0, 502, 503, 1, 0, 0, 0, 502, 500, 1, 0, 0, 0,
		503, 505, 1, 0, 0, 0, 504, 502, 1, 0, 0, 0, 505, 506, 5, 42, 0, 0, 506,
		507, 5, 47, 0, 0, 507, 508, 1, 0, 0, 0, 508, 509, 6, 63, 0, 0, 509, 128,
		1, 0, 0, 0, 510, 511, 5, 47, 0, 0, 511, 512, 5, 47, 0, 0, 512, 516, 1,
		0, 0, 0, 513, 515, 8, 12, 0, 0, 514, 513, 1, 0, 0, 0, 515, 518, 1, 0, 0,
		0, 516, 514, 1, 0, 0, 0, 516, 517, 1, 0, 0, 0, 517, 519, 1, 0, 0, 0, 518,
		516, 1, 0, 0, 0, 519, 520, 6, 64, 0, 0, 520, 130, 1, 0, 0, 0, 521, 523,
		7, 12, 0, 0, 522, 521, 1, 0, 0, 0, 523, 524, 1, 0, 0, 0, 524, 522, 1, 0,
		0, 0, 524, 525, 1, 0, 0, 0, 525, 540, 1, 0, 0, 0, 526, 540, 5, 59, 0, 0,
		527, 528, 5, 47, 0, 0, 528, 529, 5, 42, 0, 0, 529, 533, 1, 0, 0, 0, 530,
		532, 9, 0, 0, 0, 531, 530, 1, 0, 0, 0, 532, 535, 1, 0, 0, 0, 533, 534,
		1, 0, 0, 0, 533, 531, 1, 0, 0, 0, 534, 536, 1, 0, 0, 0, 535, 533, 1, 0,
		0, 0, 536, 537, 5, 42, 0, 0, 537, 540, 5, 47, 0, 0, 538, 540, 5, 0, 0,
		1, 539, 522, 1, 0, 0, 0, 539, 526, 1, 0, 0, 0, 539, 527, 1, 0, 0, 0, 539,
		538, 1, 0, 0, 0, 540, 541, 1, 0, 0, 0, 541, 542, 6, 65, 1, 0, 542, 132,
		1, 0, 0, 0, 47, 0, 145, 162, 258, 263, 266, 271, 276, 281, 286, 291, 296,
		300, 305, 308, 311, 316, 318, 326, 331, 335, 340, 343, 348, 353, 356, 360,
		368, 375, 383, 385, 393, 395, 403, 413, 424, 434, 465, 469, 474, 485, 492,
		502, 516, 524, 533, 539, 2, 0, 1, 0, 2, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// goexpressionLexerInit initializes any static state used to implement goexpressionLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewgoexpressionLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GoexpressionLexerInit() {
	staticData := &goexpressionlexerLexerStaticData
	staticData.once.Do(goexpressionlexerLexerInit)
}

// NewgoexpressionLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewgoexpressionLexer(input antlr.CharStream) *goexpressionLexer {
	GoexpressionLexerInit()
	l := new(goexpressionLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &goexpressionlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "goexpression.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// goexpressionLexer tokens.
const (
	goexpressionLexerEN_TRUE                = 1
	goexpressionLexerEN_FALSE               = 2
	goexpressionLexerEN_AND                 = 3
	goexpressionLexerEN_IN                  = 4
	goexpressionLexerEN_NOT                 = 5
	goexpressionLexerEN_OR                  = 6
	goexpressionLexerL_PAREN                = 7
	goexpressionLexerR_PAREN                = 8
	goexpressionLexerL_CURLY                = 9
	goexpressionLexerR_CURLY                = 10
	goexpressionLexerL_BRACKET              = 11
	goexpressionLexerR_BRACKET              = 12
	goexpressionLexerASSIGN                 = 13
	goexpressionLexerCOMMA                  = 14
	goexpressionLexerSEMI                   = 15
	goexpressionLexerQUESTION               = 16
	goexpressionLexerCOLON                  = 17
	goexpressionLexerDOT                    = 18
	goexpressionLexerNIL_LIT                = 19
	goexpressionLexerLOGICAL_OR             = 20
	goexpressionLexerLOGICAL_AND            = 21
	goexpressionLexerEQUALS                 = 22
	goexpressionLexerNOT_EQUALS             = 23
	goexpressionLexerLESS                   = 24
	goexpressionLexerLESS_OR_EQUALS         = 25
	goexpressionLexerGREATER                = 26
	goexpressionLexerGREATER_OR_EQUALS      = 27
	goexpressionLexerOR                     = 28
	goexpressionLexerDIV                    = 29
	goexpressionLexerMOD                    = 30
	goexpressionLexerLSHIFT                 = 31
	goexpressionLexerRSHIFT                 = 32
	goexpressionLexerBIT_CLEAR              = 33
	goexpressionLexerEXCLAMATION            = 34
	goexpressionLexerPLUS                   = 35
	goexpressionLexerMINUS                  = 36
	goexpressionLexerCARET                  = 37
	goexpressionLexerSTAR                   = 38
	goexpressionLexerAMPERSAND              = 39
	goexpressionLexerDECIMAL_LIT            = 40
	goexpressionLexerBINARY_LIT             = 41
	goexpressionLexerOCTAL_LIT              = 42
	goexpressionLexerHEX_LIT                = 43
	goexpressionLexerFLOAT_LIT              = 44
	goexpressionLexerDECIMAL_FLOAT_LIT      = 45
	goexpressionLexerHEX_FLOAT_LIT          = 46
	goexpressionLexerIDENTIFIER             = 47
	goexpressionLexerRAW_STRING_LIT         = 48
	goexpressionLexerINTERPRETED_STRING_LIT = 49
	goexpressionLexerSINGLE_STRING_LIT      = 50
	goexpressionLexerWS                     = 51
	goexpressionLexerCOMMENT                = 52
	goexpressionLexerTERMINATOR             = 53
	goexpressionLexerLINE_COMMENT           = 54
	goexpressionLexerWS_NLSEMI              = 55
	goexpressionLexerCOMMENT_NLSEMI         = 56
	goexpressionLexerLINE_COMMENT_NLSEMI    = 57
	goexpressionLexerEOS                    = 58
)
